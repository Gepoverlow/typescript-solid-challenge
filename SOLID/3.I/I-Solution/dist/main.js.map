{"mappings":"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","sources":["src/new.ts","src/classes/User.ts","src/classes/Admin.ts","src/classes/GoogleBot.ts"],"sourcesContent":["import User from \"./classes/User\";\nimport Admin from \"./classes/Admin\";\nimport GoogleBot from \"./classes/GoogleBot\";\n\n// class GoogleBot implements IUserAuth {}\n\nconst passwordElement = <HTMLInputElement>document.querySelector(\"#password\");\nconst typePasswordElement = <HTMLInputElement>document.querySelector(\"#typePassword\");\nconst typeGoogleElement = <HTMLInputElement>document.querySelector(\"#typeGoogle\");\nconst typeFacebookElement = <HTMLInputElement>document.querySelector(\"#typeFacebook\");\nconst loginAsAdminElement = <HTMLInputElement>document.querySelector(\"#loginAsAdmin\");\nconst loginAsBotElement = <HTMLInputElement>document.querySelector(\"#loginAsBot\");\nconst resetPasswordElement = <HTMLAnchorElement>document.querySelector(\"#resetPassword\");\n\nlet guest = new User();\nlet admin = new Admin();\nlet bot = new GoogleBot();\n\ndocument.querySelector(\"#login-form\").addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n\n  let user;\n\n  if (!loginAsBotElement.checked && loginAsAdminElement.checked) {\n    user = admin;\n  } else if (loginAsBotElement.checked && !loginAsAdminElement.checked) {\n    user = bot;\n  } else if (!loginAsBotElement.checked && !loginAsAdminElement.checked) {\n    user = guest;\n  } else {\n    return alert(\"please select only one option\");\n  }\n\n  if (user === guest) {\n    user.setGoogleToken(\"secret_token_google\");\n    user.setFacebookToken(\"secret_token_fb\");\n  } else if (user === bot) {\n    user.setGoogleToken(\"secret_token_google\");\n  }\n  //debugger;\n\n  let auth = false;\n  if (typeGoogleElement.checked && user != admin) {\n    auth = user.checkGoogleLogin(\"secret_token_google\");\n  } else if (typePasswordElement.checked && user != bot) {\n    auth = user.checkPassword(passwordElement.value);\n  } else if (typeFacebookElement.checked && user === guest) {\n    auth = user.checkFacebookLogin(\"secret_token_fb\");\n  }\n\n  if (auth) {\n    alert(\"login success\");\n  } else {\n    alert(\"login failed\");\n  }\n});\n\nresetPasswordElement.addEventListener(\"click\", (event) => {\n  event.preventDefault();\n\n  let user = loginAsAdminElement.checked ? admin : guest;\n  user.resetPassword();\n});\n","import IPassowrd from \"../interfaces/IPassword\";\nimport IGoogleAuth from \"../interfaces/IGoogleAuth\";\nimport IFaceBookAuth from \"../interfaces/IFaceBookAuth\";\n\nexport default class User implements IPassowrd, IGoogleAuth, IFaceBookAuth {\n  private _password: string = \"user\";\n  private _facebookToken: string;\n  private _googleToken: string;\n\n  //Interesting detail here: while I did not define a return type or param type, any deviation from the interface will give you an error.\n  // Test it out by uncommenting the code below.\n  checkGoogleLogin(token) {\n    // return \"this will not work\";\n    return token === this._googleToken;\n  }\n\n  setGoogleToken(token: string) {\n    this._googleToken = token;\n  }\n\n  checkFacebookLogin(token) {\n    return token === this._facebookToken;\n  }\n\n  setFacebookToken(token: string) {\n    this._facebookToken = token;\n  }\n\n  checkPassword(password: string): boolean {\n    return password === this._password;\n  }\n\n  resetPassword() {\n    this._password = prompt(\"What is your new password?\")!;\n  }\n}\n","import IPassword from \"../interfaces/IPassword\";\n\n//admin cannot use google or facebook token\nexport default class Admin implements IPassword {\n  private _password: string = \"admin\";\n\n  checkPassword(password: string): boolean {\n    return password === this._password;\n  }\n\n  resetPassword() {\n    this._password = prompt(\"What is your new password?\")!;\n  }\n}\n","import IGoogleAuth from \"../interfaces/IGoogleAuth\";\n\nexport default class GoogleBot implements IGoogleAuth {\n  private _googleToken: string;\n\n  setGoogleToken(token: string) {\n    this._googleToken = token;\n  }\n\n  checkGoogleLogin(token: string): boolean {\n    return token === this._googleToken;\n  }\n}\n"],"names":[],"version":3,"file":"main.js.map","sourceRoot":"../"}