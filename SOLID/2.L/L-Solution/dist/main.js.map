{"mappings":"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","sources":["old.ts"],"sourcesContent":["//This is called a Union, the discountType can only contain the following 2 values:\nconsole.log(\"hiiiiooo\");\ntype discountType = \"variable\" | \"fixed\" | \"none\";\n\nclass Discount {\n  private _type: discountType;\n  private _value: number;\n\n  constructor(type: discountType, value: number = 0) {\n    this._type = type;\n    this._value = value;\n\n    if (this._type != \"none\" && value <= 0) {\n      throw new Error(\"You cannot create a \" + this._type + \" discount with a negative value\");\n    }\n  }\n\n  apply(price: number): number {\n    //@todo: instead of using magic values as string in this, it would be a lot better to change them into constant. This would protect us from misspellings. Can you improve this?\n    if (this._type === \"none\") {\n      return price;\n    } else if (this._type === \"variable\") {\n      return price - (price * this._value) / 100;\n    } else if (this._type === \"fixed\") {\n      return Math.max(0, price - this._value);\n    } else {\n      throw new Error(\"Invalid type of discount\");\n    }\n  }\n\n  showCalculation(price: number): string {\n    if (this._type === \"none\") {\n      return \"No discount\";\n    } else if (this._type === \"variable\") {\n      return price + \" € -  \" + this._value + \"%\";\n    } else if (this._type === \"fixed\") {\n      return price + \"€ -  \" + this._value + \"€ (min 0 €)\";\n    } else {\n      throw new Error(\"Invalid type of discount\");\n    }\n  }\n}\n\nclass Product {\n  private _name: string;\n  private _price: number;\n  private _discount: Discount;\n\n  constructor(name: string, price: number, discount: Discount) {\n    this._name = name;\n    this._price = price;\n    this._discount = discount;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  get discount(): Discount {\n    return this._discount;\n  }\n\n  get originalPrice(): number {\n    return this._price;\n  }\n\n  //The reason we call this function \"calculateX\" instead of using a getter on Price is because names communicate a lot of meaning between programmers.\n  //most programmers would assume a getPrice() would be a simple display of a property that is already calculated, but in fact this function does a (more expensive) operation to calculate on the fly.\n  calculatePrice(): number {\n    return this._discount.apply(this._price);\n  }\n\n  showCalculation(): string {\n    return this._discount.showCalculation(this._price);\n  }\n}\n\nclass shoppingBasket {\n  //this array only accepts Product objects, nothing else\n  private _products: Product[] = [];\n\n  get products(): Product[] {\n    return this._products;\n  }\n\n  addProduct(product: Product) {\n    this._products.push(product);\n  }\n}\n\nlet cart = new shoppingBasket();\ncart.addProduct(new Product(\"Chair\", 25, new Discount(\"fixed\", 10)));\n//cart.addProduct(new Product('Chair', 25, new Discount(\"fixed\", -10)));\ncart.addProduct(new Product(\"Table\", 50, new Discount(\"variable\", 25)));\ncart.addProduct(new Product(\"Bed\", 100, new Discount(\"none\")));\n\nconst tableElement = document.querySelector(\"#cart tbody\");\ncart.products.forEach((product) => {\n  let tr = document.createElement(\"tr\");\n\n  let td = document.createElement(\"td\");\n  td.innerText = product.name;\n  tr.appendChild(td);\n\n  td = document.createElement(\"td\");\n  td.innerText = product.originalPrice.toFixed(2) + \" €\";\n  tr.appendChild(td);\n\n  td = document.createElement(\"td\");\n  td.innerText = product.calculatePrice().toFixed(2) + \" €\";\n  tr.appendChild(td);\n\n  td = document.createElement(\"td\");\n  td.innerText = product.showCalculation();\n  tr.appendChild(td);\n\n  tableElement.appendChild(tr);\n});\n"],"names":[],"version":3,"file":"main.js.map","sourceRoot":"../"}